apiVersion: v1

data:

  password: bW9uZ29wYXNz


  username: bW9uZ291c2Vy

kind: Secret

metadata:

  name: mongo-creds
---
apiVersion: v1

kind: PersistentVolume

metadata:

  name: mongo-data

spec:

  accessModes:

    - ReadWriteOnce

  capacity:

    storage: 1Gi

  hostPath:

    path: /data/mongo
---
apiVersion: v1

kind: PersistentVolumeClaim

metadata:

  name: pvc

spec:

  storageClassName: “”

  accessModes:
    - ReadWriteOnce 

  volumeName: pv

  resources:

    requests:

      storage: 1Gi
---
apiVersion: apps/v1

kind: Deployment

metadata:

  labels:

    app: mongo

  name: mongo

spec:

  replicas: 1
  
  selector:

    matchLabels:

      app: mongo

  strategy: {}

  template:

    metadata:

      labels:

        app: mongo

    spec:

      containers:

        - image: mongo:3.6

          name: mydb

          args: [“-dbpath”,”/data/db”]

          livenessProbe:

            exec:

              command:

                - mongo

                - -disableImplicitSessions

                - -eval

                - “db.adminCommand('ping')”

            initialDelaySeconds: 30

            periodSeconds: 10

            timeoutSeconds: 5

            successThreshold: 1

            failureThreshold: 6

          readinessProbe:

            exec:

              command:

                - mongo

                - -disableImplicitSessions

                - -eval

                - “db.adminCommand('ping')”

            initialDelaySeconds: 30

            periodSeconds: 10

            timeoutSeconds: 5

            successThreshold: 1

            failureThreshold: 6

          env:

          - name: MONGO_INITDB_ROOT_USERNAME

            valueFrom:

              secretKeyRef:

                name: mongo-creds

                key: username

          - name: MONGO_INITDB_ROOT_PASSWORD

            valueFrom:

              secretKeyRef:

                name: mongo-creds

                key: password

          volumeMounts:

          - name: “mongo-data-dir”

            mountPath: “/data/db”

          volumes:

          - name: “mongo-data-dir”

            persistentVolumeClaim:

            claimName: “pvc”
---
apiVersion: v1

kind: Service

metadata:

  labels:

    app: mongo

  name: mongo-nodeport-svc

spec:

  ports:

  - port: 27017

    protocol: TCP

    targetPort: 27017

    nodePort: 32000

  selector:

    app: mongo

  type: NodePort

status:

  loadBalancer:{}
